// <auto-generated />
using System;
using Backend.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.Migrations
{
    [DbContext(typeof(MySqlDbContext))]
    partial class MySqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Backend.Model.Marker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Lat");

                    b.Property<double>("Lng");

                    b.Property<int?>("SharedViewId");

                    b.Property<string>("Text");

                    b.Property<string>("Uid");

                    b.Property<int?>("ViewId");

                    b.HasKey("Id");

                    b.HasIndex("SharedViewId");

                    b.HasIndex("Uid")
                        .IsUnique();

                    b.HasIndex("ViewId");

                    b.ToTable("Markers");
                });

            modelBuilder.Entity("Backend.Model.SharedView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Lat");

                    b.Property<double>("Lng");

                    b.Property<string>("Reciever");

                    b.Property<string>("Sender");

                    b.Property<int>("Zoom");

                    b.HasKey("Id");

                    b.ToTable("SharedViews");
                });

            modelBuilder.Entity("Backend.Model.View", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Lat");

                    b.Property<double>("Lng");

                    b.Property<string>("Uid");

                    b.Property<string>("UserName");

                    b.Property<int>("Zoom");

                    b.HasKey("Id");

                    b.ToTable("Views");
                });

            modelBuilder.Entity("Backend.Model.Marker", b =>
                {
                    b.HasOne("Backend.Model.SharedView")
                        .WithMany("Markers")
                        .HasForeignKey("SharedViewId");

                    b.HasOne("Backend.Model.View")
                        .WithMany("Markers")
                        .HasForeignKey("ViewId");
                });
#pragma warning restore 612, 618
        }
    }
}
